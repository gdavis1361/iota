services:
  server:
    build:
      context: .
      dockerfile: docker/server/Dockerfile
    volumes:
      - ./server:/app
    env_file:
      - server/.env
      - server/.env.test
    environment:
      - PYTHONPATH=/app
    depends_on:
      - postgres
      - redis-master
    ports:
      - "8000:8000"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: iota
      POSTGRES_PASSWORD: iota
      POSTGRES_DB: iota
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/postgres/initdb:/docker-entrypoint-initdb.d
    ports:
      - "15432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U iota"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis-master:
    image: redis:7-alpine
    command: redis-server --appendonly yes
    ports:
      - "6380:6379"  # Changed from 6379:6379 to avoid conflict
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 3

  redis-replica-1:
    image: redis:7-alpine
    command: redis-server --appendonly yes --replicaof redis-master 6379
    ports:
      - "6381:6379"
    depends_on:
      - redis-master
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 3

  redis-replica-2:
    image: redis:7-alpine
    command: redis-server --appendonly yes --replicaof redis-master 6379
    ports:
      - "6382:6379"
    depends_on:
      - redis-master
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 3

  redis-sentinel-1:
    image: redis:7-alpine
    command: redis-sentinel /usr/local/etc/redis/sentinel.conf
    volumes:
      - ./config/sentinel.conf:/usr/local/etc/redis/sentinel.conf:rw
      - sentinel1_data:/data
    ports:
      - "26379:26379"
    depends_on:
      - redis-master
      - redis-replica-1
      - redis-replica-2
    healthcheck:
      test: ["CMD", "redis-cli", "-p", "26379", "ping"]
      interval: 5s
      timeout: 3s
      retries: 3

  redis-sentinel-2:
    image: redis:7-alpine
    command: redis-sentinel /usr/local/etc/redis/sentinel.conf
    volumes:
      - ./config/sentinel.conf:/usr/local/etc/redis/sentinel.conf:rw
      - sentinel2_data:/data
    ports:
      - "26380:26379"
    depends_on:
      - redis-master
      - redis-replica-1
      - redis-replica-2
    healthcheck:
      test: ["CMD", "redis-cli", "-p", "26379", "ping"]
      interval: 5s
      timeout: 3s
      retries: 3

  redis-sentinel-3:
    image: redis:7-alpine
    command: redis-sentinel /usr/local/etc/redis/sentinel.conf
    volumes:
      - ./config/sentinel.conf:/usr/local/etc/redis/sentinel.conf:rw
      - sentinel3_data:/data
    ports:
      - "26381:26379"
    depends_on:
      - redis-master
      - redis-replica-1
      - redis-replica-2
    healthcheck:
      test: ["CMD", "redis-cli", "-p", "26379", "ping"]
      interval: 5s
      timeout: 3s
      retries: 3

  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./provisioning/prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    ports:
      - "9091:9090"
    healthcheck:
      test: ["CMD", "wget", "-q", "--spider", "http://localhost:9090/-/healthy"]
      interval: 30s
      timeout: 10s
      retries: 3

  grafana:
    image: grafana/grafana:latest
    volumes:
      - ./provisioning:/etc/grafana/provisioning
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_FEATURE_TOGGLES_ENABLE=alertingProvisioning
    ports:
      - "3000:3000"
    depends_on:
      - prometheus

  nginx:
    image: nginx:alpine
    volumes:
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./server/static:/app/static
      - ./server/media:/app/media
    ports:
      - "80:80"
    depends_on:
      - server

volumes:
  postgres_data:
  sentinel1_data:
  sentinel2_data:
  sentinel3_data:
  grafana_data:
  prometheus_data:

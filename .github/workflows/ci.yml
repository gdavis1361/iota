name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.9', '3.10', '3.11']

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -r requirements-test.txt

      - name: Run unit tests
        run: |
          pytest --cov=. --cov-report=xml --maxfail=1 -v tests/ --ignore=tests/test_metrics_integration.py --ignore=tests/test_dashboard_visual.py
        env:
          ENVIRONMENT: test
          SECRET_KEY: ${{ secrets.TEST_SECRET_KEY }}
          SENTRY_DSN: ${{ secrets.TEST_SENTRY_DSN }}

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.xml
          fail_ci_if_error: true

  integration-test:
    runs-on: ubuntu-latest
    needs: test
    services:
      prometheus:
        image: prom/prometheus:v2.45.0
        ports:
          - 9090:9090

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -r requirements-test.txt
          pip install requests prometheus_client pytest-timeout

      - name: Start metrics exporter
        run: |
          python scripts/metrics_exporter.py &
          sleep 5  # Wait for exporter to start

      - name: Run integration tests
        run: |
          pytest tests/test_metrics_integration.py -v --timeout=30
        env:
          ENVIRONMENT: test
          SECRET_KEY: ${{ secrets.TEST_SECRET_KEY }}
          METRICS_PORT: 9090

  visual-test:
    runs-on: ubuntu-latest
    needs: integration-test
    services:
      grafana:
        image: grafana/grafana:latest
        ports:
          - 3000:3000
      prometheus:
        image: prom/prometheus:v2.45.0
        ports:
          - 9090:9090

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install Chrome
        run: |
          sudo apt-get update
          sudo apt-get install -y chromium-browser

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -r requirements-test.txt

      - name: Start metrics exporter
        run: |
          python scripts/metrics_exporter.py &
          sleep 5  # Wait for exporter to start

      - name: Setup Grafana
        run: |
          # Wait for Grafana to be ready
          timeout 60 bash -c 'while [[ "$(curl -s -o /dev/null -w ''%{http_code}'' localhost:3000)" != "200" ]]; do sleep 5; done'

          # Import dashboard
          curl -X POST -H "Content-Type: application/json" -d @config/grafana/validation_dashboard.json http://admin:admin@localhost:3000/api/dashboards/db

      - name: Run visual regression tests
        run: |
          pytest tests/test_dashboard_visual.py -v --timeout=60
        env:
          ENVIRONMENT: test
          SECRET_KEY: ${{ secrets.TEST_SECRET_KEY }}
          DISPLAY: :99

      - name: Upload visual diff artifacts
        if: failure()
        uses: actions/upload-artifact@v3
        with:
          name: visual-diffs
          path: tests/visual_diff/
          retention-days: 14

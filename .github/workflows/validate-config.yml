name: Configuration Validation

on:
  push:
    paths:
      - 'config/**'
      - '.env*'
      - 'server/core/config/**'
  pull_request:
    paths:
      - 'config/**'
      - '.env*'
      - 'server/core/config/**'

jobs:
  validate:
    name: Validate Configuration
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.9'
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run configuration validation
        run: python scripts/validate_config.py
        env:
          # Set test environment variables
          ENVIRONMENT: testing
          SECRET_KEY: ${{ secrets.TEST_SECRET_KEY }}
          DEBUG: false
          ALLOWED_HOSTS: '["localhost", "127.0.0.1"]'
          SENTRY_ENABLED: false

      - name: Check validation metrics
        if: always()
        run: |
          python scripts/check_validation_metrics.py \
            --error-threshold 10 \
            --warning-threshold 20 \
            --security-threshold 0

      - name: Report validation status
        if: always()
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const metrics = JSON.parse(fs.readFileSync('validation_metrics.json', 'utf8'));

            const summary = `## Configuration Validation Results

            ### Metrics
            - Errors: ${metrics.error_count}
            - Warnings: ${metrics.warning_count}
            - Security Issues: ${metrics.security_count}
            - Validation Time: ${metrics.validation_time_ms}ms

            ### Security Concerns
            ${metrics.security_concerns.map(concern => `- ❌ ${concern}`).join('\n')}

            ### Warnings
            ${metrics.warnings.map(warning => `- ⚠️ ${warning}`).join('\n')}
            `;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: summary
            });
